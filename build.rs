extern crate peg;

use std::fs::File;
use std::io::{Read, Write};
use std::path::Path;
use std::process;

fn main() {
    // peg::cargo_build("src/grammar.peg");
    let filename: &str = "src/grammar.peg";
    let output: &str = "src/grammar.rs";
    let mut source = String::new();
    File::open(Path::new(filename))
        .unwrap()
        .read_to_string(&mut source)
        .unwrap();
    let mut f = File::create(&output).unwrap();

    match peg::compile(&mut source) {
        Ok(parser) => {
            writeln!(&mut f, "// Generated by rust-peg. Do not edit.").unwrap();
            write!(&mut f, "{}", parser).unwrap();
        }
        Err(_) => {
            process::exit(1);
        }
    }
}
